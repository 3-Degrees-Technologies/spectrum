#!/bin/bash
# project_discover - Documentation-driven project setup tool
# Creates PROJECT_BRIEF.md and DOMAIN_ANALYSIS.md from human input

# Colors and emoji
RED='\033[0;31m'
GREEN='\033[0;32m'
YELLOW='\033[1;33m'
BLUE='\033[0;34m'
NC='\033[0m'
SUCCESS="‚úÖ"
ERROR="‚ùå"
WARNING="‚ö†Ô∏è"
INFO="üìã"
WORKING="üîÑ"
INPUT="üìù"
DISCOVER="üîç"
DOCUMENT="üìÑ"

# Usage check
if [ $# -lt 1 ]; then
    echo -e "${ERROR} Usage: ./project_discover <project_name>"
    echo -e "${INFO} Example: ./project_discover 'pCloud Music Player Android'"
    echo -e "${INFO} This tool creates PROJECT_BRIEF.md and DOMAIN_ANALYSIS.md"
    echo -e "${INFO} The human will describe the project requirements"
    exit 1
fi

project_name="$1"

echo -e "${INFO} ${BLUE}Agent-Knowledge Project Discovery Framework${NC}"
echo -e "${DISCOVER} Starting discovery for: ${project_name}"
echo ""

# Check if project brief already exists
if [ -f "PROJECT_BRIEF.md" ]; then
    echo -e "${WARNING} PROJECT_BRIEF.md already exists"
    echo -e "${INPUT} Do you want to overwrite it? (y/n): "
    read -r response
    if [[ ! "$response" =~ ^[Yy]$ ]]; then
        echo -e "${INFO} Project discovery cancelled"
        exit 0
    fi
fi

echo -e "${DOCUMENT} Creating PROJECT_BRIEF.md template..."

# Create PROJECT_BRIEF.md template
cat > PROJECT_BRIEF.md << EOF
# ${project_name} - Project Brief

## Project Overview
**Project Name:** ${project_name}
**Created:** $(date '+%Y-%m-%d')
**Status:** Discovery Phase

<!-- Lieutenant Green: Please describe the project in detail -->

## Requirements
<!-- Describe what the project needs to accomplish -->

## Technical Context  
<!-- Technology stack, integrations, constraints -->

## Success Criteria
<!-- How do we know when this project is complete? -->

## Domain Areas Identified
<!-- This will be populated after domain analysis -->

---
*Generated by project_discover on $(date '+%Y-%m-%d %H:%M:%S')*
EOF

echo -e "${SUCCESS} Created PROJECT_BRIEF.md template"

# Create DOMAIN_ANALYSIS.md template  
echo -e "${DOCUMENT} Creating DOMAIN_ANALYSIS.md template..."

cat > DOMAIN_ANALYSIS.md << EOF
# ${project_name} - Domain Analysis

## Analysis Overview
**Project:** ${project_name}
**Analysis Date:** $(date '+%Y-%m-%d')
**Status:** Pending Analysis

<!-- Lieutenant Green: Analyze the project brief and identify feature domains -->

## Identified Feature Domains

<!-- For each major feature area, create a section like this:

### Domain Name
**Rationale:** Why this is a separate domain
**Epic Scope:** What this epic should encompass
**Dependencies:** What other domains this depends on
**Technology Areas:** UI, business-logic, data, integration, background-service, security

-->

## Epic Structure Recommendation

<!-- Recommended Linear ticket structure:
ProjectName-1: [Project] Full Project Name
‚îî‚îÄ‚îÄ ProjectName-2: [Implementation] Core Feature Development  
    ‚îú‚îÄ‚îÄ ProjectName-3: [Epic] Domain 1 Name
    ‚îú‚îÄ‚îÄ ProjectName-4: [Epic] Domain 2 Name
    ‚îî‚îÄ‚îÄ ProjectName-N: [Epic] Domain N Name
-->

## Labeling Strategy

### Product Labels
<!-- Labels for feature areas: auth, playback, discovery, ui, etc. -->

### Technology Labels  
<!-- Labels for tech domains: ui, business-logic, data, integration, background-service, security -->

---
*Generated by project_discover on $(date '+%Y-%m-%d %H:%M:%S')*
EOF

echo -e "${SUCCESS} Created DOMAIN_ANALYSIS.md template"

echo ""
echo -e "${INFO} ${GREEN}Project Discovery Setup Complete!${NC}"
echo ""
echo -e "${DOCUMENT} Next Steps:"
echo -e "${INFO} 1. Edit PROJECT_BRIEF.md with project details"
echo -e "${INFO} 2. Lieutenant Green will analyze and populate DOMAIN_ANALYSIS.md"
echo -e "${INFO} 3. Use ./project_structure to create Linear tickets"
echo ""
echo -e "${INPUT} Files created:"
echo -e "${INFO} ‚Ä¢ PROJECT_BRIEF.md - Project requirements and context"
echo -e "${INFO} ‚Ä¢ DOMAIN_ANALYSIS.md - Feature domain breakdown"
echo ""
echo -e "${BLUE}Ready for project requirements gathering!${NC}"