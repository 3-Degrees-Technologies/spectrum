#!/bin/bash
# bulk_breakdown command for Agent-Knowledge
# Automates: Complex task -> Breakdown analysis -> Multiple ticket creation -> Validation -> Refinement prompts

# Colors and emoji
RED='\033[0;31m'
GREEN='\033[0;32m'
YELLOW='\033[1;33m'
BLUE='\033[0;34m'
NC='\033[0m'
SUCCESS="‚úÖ"
ERROR="‚ùå"
WARNING="‚ö†Ô∏è"
INFO="üìã"
WORKING="üîÑ"
ANALYZE="üîç"
CREATE="üé´"
VALIDATE="‚ú®"
BULK="üì¶"

# Usage check
if [ $# -lt 2 ]; then
    echo -e "${ERROR} Usage: ./bulk_breakdown <breakdown_type> <title> [description] [parent_id]"
    echo -e "${INFO} Breakdown types:"
    echo -e "${INFO}   epic <title> [description] - Research + Implementation phases"
    echo -e "${INFO}   implementation <title> [description] [parent] - Split large implementation"
    echo -e "${INFO}   split <parent_id> - Break down existing ticket that failed validation"
    echo -e "${INFO} Examples:"
    echo -e "${INFO}   ./bulk_breakdown epic 'API Rewrite' 'Convert to GraphQL'"
    echo -e "${INFO}   ./bulk_breakdown implementation 'CLI Framework' 'Click + config + auth' SPE-10"
    echo -e "${INFO}   ./bulk_breakdown split SPE-15"
    exit 1
fi

breakdown_type="$1"
title="$2"
description="${3:-}"
parent_id="${4:-}"

echo -e "${BULK} ${BLUE}Agent-Knowledge Bulk Breakdown Framework${NC}"
echo "‚ú® Processing ${breakdown_type} breakdown: ${title}"
echo ""

# Step 1: Analysis
echo -e "${ANALYZE} Step 1: Analyzing breakdown requirements..."

case "$breakdown_type" in
    "epic")
        echo -e "${INFO} Epic breakdown detected"
        echo -e "${INFO} Recommended structure:"
        echo -e "${INFO}   ‚Ä¢ Research phase (1 ticket)"
        echo -e "${INFO}   ‚Ä¢ Implementation parent (1 coordination ticket)"
        echo -e "${INFO}   ‚Ä¢ Implementation subtasks (3-5 focused tickets)"
        
        echo -e "${WORKING} Step 2: Creating epic structure..."
        
        # Create epic parent
        echo -e "${WORKING} Creating epic parent ticket..."
        epic_result=$(./write_ticket research "$title Epic" "Epic to coordinate ${title,,} with sequential research and implementation phases.

## Strategic Value
${description}

## Epic Scope
This epic will be broken down into sequential Research ‚Üí Implementation phases with focused subtasks.

## Structure
- Research phase: Architecture and technical analysis
- Implementation phase: Coordinated development across multiple technical areas")
        
        if [[ $epic_result == *"Created"* ]]; then
            epic_id=$(echo "$epic_result" | grep -o 'SPE-[0-9]*' | head -1)
            echo -e "${SUCCESS} Created epic parent: $epic_id"
            
            # Create research phase
            echo -e "${WORKING} Creating research phase..."
            research_result=$(./write_ticket research "$title Architecture Research" "Research phase to design the technical architecture for $title.

## Objective
Design the technical architecture and implementation approach for the $title project.

## Research Tasks
- Technical stack analysis and selection
- Architecture design and documentation
- Implementation timeline and breakdown
- Integration requirements analysis

## Deliverables
- Technical architecture document
- Implementation roadmap
- Clear specification for implementation phase

## Success Criteria
- Complete technical approach defined
- Implementation tasks clearly scoped
- Architecture decisions documented and justified" "$epic_id")
            
            if [[ $research_result == *"Created"* ]]; then
                research_id=$(echo "$research_result" | grep -o 'SPE-[0-9]*' | head -1)
                echo -e "${SUCCESS} Created research phase: $research_id"
                
                # Create implementation parent
                echo -e "${WORKING} Creating implementation parent..."
                impl_result=$(./write_ticket implementation "$title Implementation" "Parent ticket for implementing $title across multiple technical areas.

## Context
This parent ticket coordinates the implementation phase of the $title project, following the architecture designed in $research_id.

## Prerequisites
- $research_id (Research) must be completed
- Technical architecture document approved
- Implementation specifications finalized

## Implementation Breakdown
The implementation is broken down into focused subtasks that each handle a specific technical area.

## Success Criteria
- All subtasks completed successfully
- Integration across technical areas validated
- Performance and functionality requirements met" "$epic_id")
                
                if [[ $impl_result == *"Created"* ]]; then
                    impl_parent_id=$(echo "$impl_result" | grep -o 'SPE-[0-9]*' | head -1)
                    echo -e "${SUCCESS} Created implementation parent: $impl_parent_id"
                    
                    echo -e "${WARNING} ${YELLOW}Epic structure created successfully!${NC}"
                    echo ""
                    echo -e "${INFO} ${BLUE}=== NEXT ACTIONS ===${NC}"
                    echo -e "${INFO} 1. Create implementation subtasks:"
                    echo -e "${INFO}    ./write_ticket implementation 'Core Framework' 'Foundation components' $impl_parent_id"
                    echo -e "${INFO}    ./write_ticket implementation 'Integration Layer' 'External system integration' $impl_parent_id"
                    echo -e "${INFO}    ./write_ticket implementation 'Business Logic' 'Core functionality' $impl_parent_id"
                    echo -e "${INFO}    (Add 2-3 more specific to your technical areas)"
                    echo ""
                    echo -e "${INFO} 2. Start with research phase:"
                    echo -e "${INFO}    ./assign_ticket $research_id Agent-Sam"
                    echo -e "${BLUE}=========================${NC}"
                else
                    echo -e "${ERROR} Failed to create implementation parent"
                    exit 1
                fi
            else
                echo -e "${ERROR} Failed to create research phase"
                exit 1
            fi
        else
            echo -e "${ERROR} Failed to create epic parent"
            exit 1
        fi
        ;;
        
    "implementation")
        if [ -z "$parent_id" ]; then
            echo -e "${ERROR} Parent ID required for implementation breakdown"
            exit 1
        fi
        
        echo -e "${INFO} Implementation breakdown detected"
        echo -e "${INFO} Converting large implementation ticket to parent + focused subtasks"
        
        echo -e "${WORKING} Step 2: Converting parent ticket..."
        
        # Update parent to be coordination-only
        parent_desc="Parent ticket for implementing $title across multiple technical areas.

## Context
This parent ticket coordinates the implementation of $title, broken down into focused technical subtasks.

## Prerequisites
- Architecture and design phase completed
- Technical specifications available

## Implementation Breakdown
The implementation is broken down into focused subtasks that each handle a specific technical area.

## Success Criteria
- All subtasks completed successfully
- Integration across technical areas validated
- Functionality and performance requirements met"
        
        echo -e "${WORKING} Updating parent ticket description..."
        saber description "$parent_id" "$parent_desc"
        echo -e "${SUCCESS} Converted $parent_id to parent ticket"
        
        echo -e "${WARNING} ${YELLOW}Implementation parent updated!${NC}"
        echo ""
        echo -e "${INFO} ${BLUE}=== NEXT ACTIONS ===${NC}"
        echo -e "${INFO} Create focused implementation subtasks:"
        echo -e "${INFO}   ./write_ticket implementation 'Framework Setup' 'Core framework and configuration' $parent_id"
        echo -e "${INFO}   ./write_ticket implementation 'Integration Layer' 'External system integration' $parent_id"
        echo -e "${INFO}   ./write_ticket implementation 'Core Features' 'Primary functionality implementation' $parent_id"
        echo -e "${INFO}   ./write_ticket implementation 'Testing & Validation' 'Test suite and validation' $parent_id"
        echo -e "${INFO} (Customize subtasks based on your specific technical areas)"
        echo -e "${BLUE}=========================${NC}"
        ;;
        
    "split")
        if [ -z "$title" ] || [[ ! "$title" =~ ^SPE-[0-9]+$ ]]; then
            echo -e "${ERROR} Valid ticket ID required for split (e.g., SPE-123)"
            exit 1
        fi
        
        ticket_id="$title"
        echo -e "${INFO} Ticket split breakdown detected"
        echo -e "${INFO} Analyzing $ticket_id for breakdown opportunities..."
        
        # Get ticket details
        ticket_info=$(saber get "$ticket_id" 2>/dev/null)
        if [ $? -ne 0 ]; then
            echo -e "${ERROR} Failed to retrieve ticket $ticket_id"
            exit 1
        fi
        
        ticket_title=$(echo "$ticket_info" | jq -r '.title')
        echo -e "${SUCCESS} Found ticket: $ticket_title"
        
        # Validate the ticket
        echo -e "${WORKING} Running validation analysis..."
        validation_result=$(./validate_ticket "$ticket_id" 2>/dev/null)
        
        if [[ $validation_result == *"VALIDATION FAILED"* ]]; then
            echo -e "${WARNING} Validation confirms breakdown needed"
            
            # Convert to parent ticket
            parent_desc="Parent ticket for $ticket_title broken down into focused subtasks.

## Context
This parent ticket coordinates the implementation of $ticket_title, originally identified as too broad for single implementation.

## Implementation Breakdown
The work is broken down into focused subtasks that each handle a specific aspect of the implementation.

## Success Criteria
- All subtasks completed successfully
- Integration across subtasks validated
- Original requirements fully met"
            
            echo -e "${WORKING} Converting to parent ticket..."
            saber description "$ticket_id" "$parent_desc"
            echo -e "${SUCCESS} Converted $ticket_id to parent ticket"
            
            echo -e "${WARNING} ${YELLOW}Ticket converted to parent!${NC}"
            echo ""
            echo -e "${INFO} ${BLUE}=== NEXT ACTIONS ===${NC}"
            echo -e "${INFO} Create focused subtasks for the specific areas identified in validation:"
            echo -e "${INFO}   ./write_ticket implementation 'Component A' 'First focused area' $ticket_id"
            echo -e "${INFO}   ./write_ticket implementation 'Component B' 'Second focused area' $ticket_id"
            echo -e "${INFO}   ./write_ticket implementation 'Component C' 'Third focused area' $ticket_id"
            echo -e "${INFO} (Base subtasks on the specific multiple tasks identified by validator)"
            echo -e "${BLUE}=========================${NC}"
        else
            echo -e "${SUCCESS} Ticket validation passed - no breakdown needed"
            echo -e "${INFO} $ticket_id appears to be properly scoped"
        fi
        ;;
        
    *)
        echo -e "${ERROR} Unknown breakdown type: $breakdown_type"
        echo -e "${INFO} Supported types: epic, implementation, split"
        exit 1
        ;;
esac

echo ""
echo -e "${SUCCESS} ${GREEN}Bulk breakdown process complete!${NC}"
echo -e "${INFO} Remember to run validation on any newly created tickets"