#!/bin/bash
# integration-green command for Centro Development Framework
# Implements: Integration Test GREEN cycle - Make the failing test pass

# Colors and emoji
RED='\033[0;31m'
GREEN='\033[0;32m'
YELLOW='\033[1;33m'
BLUE='\033[0;34m'
NC='\033[0m'
SUCCESS="✅"
ERROR="❌"
INFO="📋"
WORKING="🔄"
TEST="🧪"
INTEGRATION="🔗"

echo -e "${TEST} ${GREEN}INTEGRATION GREEN CYCLE${NC}: Making the test pass"

# Check if we have a test state from integration-red
if [[ ! -f ".tmp/integration-test-state.json" ]]; then
    echo -e "${ERROR} No integration test state found. Please run ./integration-red first"
    exit 1
fi

# Read test state
test_file=$(jq -r '.test_file' .tmp/integration-test-state.json)
test_description=$(jq -r '.test_description' .tmp/integration-test-state.json)
service_type=$(jq -r '.service_type' .tmp/integration-test-state.json)

echo -e "${INFO} Test: $test_description"
echo -e "${INFO} File: $test_file"

if [[ ! -f "$test_file" ]]; then
    echo -e "${ERROR} Test file not found: $test_file"
    exit 1
fi

echo -e "\n${INTEGRATION} ${YELLOW}Integration Test Implementation${NC}"

# Provide guidance based on service type
case $service_type in
    1) # Lambda function
        echo -e "${INFO} Lambda Function Testing Guidance:"
        echo -e "  1. Check if Lambda service is running:"
        echo -e "     expect(res.getBody().services.lambda).to.equal('running');"
        echo -e "  2. List Lambda functions (if needed):"
        echo -e "     Call: GET {{localstackUrl}}/2015-03-31/functions"
        echo -e "  3. Invoke specific Lambda function:"
        echo -e "     Call: POST {{localstackUrl}}/2015-03-31/functions/FUNCTION_NAME/invocations"
        ;;
    2) # DynamoDB operations
        echo -e "${INFO} DynamoDB Testing Guidance:"
        echo -e "  1. Check if DynamoDB service is running:"
        echo -e "     expect(res.getBody().services.dynamodb).to.equal('running');"
        echo -e "  2. List tables:"
        echo -e "     Call: GET {{localstackUrl}}/ with DynamoDB ListTables action"
        echo -e "  3. Query/Put items:"
        echo -e "     Use DynamoDB HTTP API calls"
        ;;
    *) # Other services
        echo -e "${INFO} General Testing Guidance:"
        echo -e "  1. Check service health:"
        echo -e "     expect(res.getStatus()).to.equal(200);"
        echo -e "  2. Validate response structure:"
        echo -e "     expect(res.getBody()).to.have.property('services');"
        ;;
esac

echo -e "\n${WORKING} Common Integration Test Patterns:"
echo -e "  ✅ Service health: expect(res.getBody().services.SERVICE_NAME).to.equal('running');"
echo -e "  ✅ HTTP status: expect(res.getStatus()).to.equal(200);"
echo -e "  ✅ Response structure: expect(res.getBody()).to.have.property('field_name');"
echo -e "  ✅ Data validation: expect(res.getBody().data.value).to.equal('expected');"

echo -e "\n${INFO} To implement the GREEN phase:"
echo -e "  1. Open: $test_file"
echo -e "  2. Replace: expect(false).to.equal(true); // FAILING TEST"
echo -e "  3. With: A real assertion that should pass"
echo -e "  4. Run the test to verify it passes"

echo -e "\n${TEST} To run this test:"
collection_path=$(dirname "$test_file")
echo -e "  bruno run '$collection_path' --env LocalStack"

# Update test state
jq '.phase = "green"' .tmp/integration-test-state.json > .tmp/integration-test-state.json.tmp
mv .tmp/integration-test-state.json.tmp .tmp/integration-test-state.json

echo -e "\n${SUCCESS} Ready for GREEN phase implementation!"