#!/bin/bash
# Agent - AI Agent Launcher
# Generated by spectrum-init

set -e

CONTAINER_NAME="spectrum-spectrum"

# Load agent names from configuration
get_agent_name() {
    local color="$1"
    if [[ -f ".spectrum/agent-names.json" ]]; then
        # Try to extract agent name from JSON
        local agent_key="AGENT_${color^^}"  # Convert to uppercase
        if command -v jq >/dev/null 2>&1; then
            jq -r ".$agent_key // \"Agent-${color^}\"" .spectrum/agent-names.json 2>/dev/null || echo "Agent-${color^}"
        else
            # Fallback: simple grep extraction
            grep "\"$agent_key\"" .spectrum/agent-names.json 2>/dev/null | sed 's/.*": *"\([^"]*\)".*/\1/' || echo "Agent-${color^}"
        fi
    else
        echo "Agent-${color^}"
    fi
}

if [[ $# -ne 1 ]]; then
    echo "Usage: $0 <agent>"
    echo "Agents: red, green, blue"
    exit 1
fi

AGENT="$1"

# Handle scarlet alias
if [[ "$AGENT" == "scarlet" ]]; then
    AGENT="red"
fi

# Define agent working directories
case "$AGENT" in
        "red")
            WORK_DIR="/workspace/red"
            HOST_DIR="./red"        AGENT_NAME="$(get_agent_name red)"
        ;;
    "green")
        WORK_DIR="/workspace"
        HOST_DIR="."
        AGENT_NAME="$(get_agent_name green)"
        ;;
        "blue")
            WORK_DIR="/workspace/blue"
            HOST_DIR="./blue"        AGENT_NAME="$(get_agent_name blue)"
        ;;
    *)
        echo "❌ Unknown agent: $AGENT"
        echo "Available agents: red, green, blue"
        exit 1
        ;;
esac

echo "🎖️  Launching $AGENT_NAME"
echo "Working directory: $HOST_DIR"

# Start container if not running
if ! podman ps -q --filter "name=$CONTAINER_NAME" 2>/dev/null | grep -q .; then
    echo "🔄 Starting container..."
    podman start "$CONTAINER_NAME"
    sleep 2
fi

# Launch agent with opencode
exec podman exec -it -w "$WORK_DIR" -e "USER=sjp" -e "USERNAME=sjp" -e "LOGNAME=sjp" "$CONTAINER_NAME" /home/spectrum/.opencode/bin/opencode
